{"ast":null,"code":"var _jsxFileName = \"/Users/anofrancis/Desktop/tesla-web-app/src/components/ModelOrderConfigurations.js\";\nimport React, { Component } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport Fab from '@material-ui/core/Fab'; // import image from '../assets/modelX.png'\n\nimport modelS from '../assets/modelS.png';\nimport blackCar from '../assets/MS-Specs-Hero-Desktop\\ 1.png';\nimport ModelSpecView from './ModelDetailsGridView';\nimport TopBottomTextView from './MinimalSpecView/TopBottomTextView';\nimport { fetchModelDetails } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModelOrderConfiguration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onOrderClick = () => {\n      const {\n        history\n      } = this.props;\n      history.push('/modelOrder');\n    };\n\n    this.onOrderClick = this.onOrderClick.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {}\n\n  componentDidMount() {// const { location } = this.props\n    // const { modelName } = location.state\n    // const { getModelDetails } = this.props\n    // getModelDetails(modelName)\n  }\n\n  render() {\n    const {\n      modelName,\n      modelConfig\n    } = this.props;\n    console.log('Model config:::', modelConfig);\n    const variants = modelConfig ? modelConfig.variants.map(item => {\n      return {\n        variant: item.variant,\n        variantDisplayName: item.variantName\n      };\n    }) : [];\n    console.log('variants:::', variants); // const selectedVariant = ;\n\n    const variantData = modelData ? modelData.filter(item => {\n      return item.variant === (selectedVariant !== '' ? selectedVariant : variants[0].variant);\n    })[0] : {};\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"modelName\",\n            children: modelConfig.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            conatiner: true,\n            direction: \"column\",\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TopBottomTextView, {\n                topData: modelConfig.range,\n                bottomData: \"Est Range\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TopBottomTextView, {\n                topData: modelConfig.range,\n                bottomData: \"Est Range\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TopBottomTextView, {\n                topData: modelConfig.range,\n                bottomData: \"Est Range\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n/**\n * Function to call the action to call API to send login credentials for verification\n */\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getModelDetails: model => dispatch(fetchModelDetails(model))\n  };\n}\n/**\n * Function to receive the state of login api call response\n */\n\n\nfunction mapStateToProps(state) {\n  return {\n    modelData: state.allCarReducer.selectedModelData\n  };\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(ModelOrderConfiguration);","map":{"version":3,"sources":["/Users/anofrancis/Desktop/tesla-web-app/src/components/ModelOrderConfigurations.js"],"names":["React","Component","Grid","connect","compose","Fab","modelS","blackCar","ModelSpecView","TopBottomTextView","fetchModelDetails","ModelOrderConfiguration","constructor","props","onOrderClick","history","push","bind","componentWillReceiveProps","nextProps","componentDidMount","render","modelName","modelConfig","console","log","variants","map","item","variant","variantDisplayName","variantName","variantData","modelData","filter","selectedVariant","displayName","range","mapDispatchToProps","dispatch","getModelDetails","model","mapStateToProps","state","allCarReducer","selectedModelData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Grid\n} from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport compose from 'recompose/compose'\nimport Fab from '@material-ui/core/Fab'\n// import image from '../assets/modelX.png'\nimport modelS from '../assets/modelS.png'\nimport blackCar from '../assets/MS-Specs-Hero-Desktop\\ 1.png'\nimport ModelSpecView from './ModelDetailsGridView'\nimport TopBottomTextView from './MinimalSpecView/TopBottomTextView'\nimport {fetchModelDetails} from '../actions'\n\nclass ModelOrderConfiguration extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.onOrderClick = this.onOrderClick.bind(this);\n      }\n\n  componentWillReceiveProps(nextProps) {\n    \n  }\n\n  onOrderClick = () => {\n    const {history} = this.props\n\n    history.push('/modelOrder')\n  }\n\n  componentDidMount() {\n    // const { location } = this.props\n    // const { modelName } = location.state\n    // const { getModelDetails } = this.props\n\n    // getModelDetails(modelName)\n  }\n\n\n  render() {\n    const { modelName, modelConfig } = this.props;\n\n    console.log('Model config:::',modelConfig)\n\n    const variants = modelConfig ? modelConfig.variants.map((item) => {\n      return {variant: item.variant, variantDisplayName: item.variantName};\n  }) : [];\n\n  console.log('variants:::', variants)\n\n  // const selectedVariant = ;\n\n  const variantData = modelData ? modelData.filter((item) => {\n      return (item.variant === (selectedVariant !== '' ? selectedVariant : variants[0].variant));\n  })[0] : {};\n\n    return (\n        <div>\n        <Grid container direction='row' justifyContent='center'>\n                <Grid item>\n                    <span class='modelName'>\n                    {modelConfig.displayName}\n                    </span>\n                </Grid>\n                <Grid item>\n                  <Grid conatiner direction='column' spacing={2}>\n                    <Grid item>\n                        <TopBottomTextView topData={modelConfig.range} bottomData=\"Est Range\" />\n                    </Grid>\n                    <Grid item>\n                        <TopBottomTextView topData={modelConfig.range} bottomData=\"Est Range\" />\n                    </Grid>\n                    <Grid item>\n                        <TopBottomTextView topData={modelConfig.range} bottomData=\"Est Range\" />\n                    </Grid>\n                  </Grid>\n                </Grid>\n            </Grid>\n        </div>\n    )\n  }\n}\n\n/**\n * Function to call the action to call API to send login credentials for verification\n */\nfunction mapDispatchToProps(dispatch) {\n  return {\n      getModelDetails: (model) => dispatch(fetchModelDetails(model))\n  }\n}\n/**\n * Function to receive the state of login api call response\n */\nfunction mapStateToProps(state) {\n  return {\n    modelData: state.allCarReducer.selectedModelData\n  }\n}\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(ModelOrderConfiguration)\n"]},"metadata":{},"sourceType":"module"}