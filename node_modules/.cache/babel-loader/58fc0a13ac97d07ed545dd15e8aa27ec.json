{"ast":null,"code":"var _jsxFileName = \"/Users/anofrancis/Desktop/tesla-web-app/src/components/ModelConfiguration/ModelOrderConfigurations.js\";\nimport React, { Component } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport Fab from '@material-ui/core/Fab'; // import image from '../assets/modelX.png'\n\nimport TopBottomTextView from '../MinimalSpecView/TopBottomTextView';\nimport { fetchModelDetails } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModelOrderConfiguration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onVariantSelection = variant => {\n      this.setState({\n        selectedVariant: variant\n      }); // const {history} = this.props\n      // history.push('/modelOrder')\n    };\n\n    this.state = {\n      selectedVariant: ''\n    };\n    this.onVariantSelection = this.onVariantSelection.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {}\n\n  componentDidMount() {// const { location } = this.props\n    // const { modelName } = location.state\n    // const { getModelDetails } = this.props\n    // getModelDetails(modelName)\n  }\n\n  render() {\n    const {\n      modelName,\n      modelConfig\n    } = this.props;\n    const {\n      selectedVariant\n    } = this.state;\n    console.log('Model config:::', modelConfig);\n    const variants = modelConfig && modelConfig.variants ? modelConfig.variants.map(item => {\n      return {\n        variant: item.variant,\n        variantDisplayName: item.variantName\n      };\n    }) : [];\n    console.log('variants:::', variants); // const selectedVariant = ;\n\n    const variantData = modelConfig && modelConfig.variants ? modelConfig.variants.filter(item => {\n      return item.variant === (selectedVariant !== '' ? selectedVariant : variants[0].variant);\n    })[0] : {};\n    console.log('variantData::', variantData);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"modelConfigPage\",\n      children: Object.keys(variantData).length > 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 2,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"modelName\",\n            children: modelConfig.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TopBottomTextView, {\n                topData: variantData.range,\n                bottomData: \"Est Range\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TopBottomTextView, {\n                topData: variantData.topSpeed,\n                bottomData: \"Top Speed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TopBottomTextView, {\n                topData: `${variantData.acceleration.time} sec`,\n                bottomData: `${variantData.acceleration.speed} sec`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            spacing: 2,\n            children: variants.map(eachVariant => {\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"btn\",\n                  onClick: this.onVariantSelection(eachVariant.variant),\n                  children: [\" \", eachVariant.variantDisplayName, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 27\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 12\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n/**\n * Function to call the action to call API to send login credentials for verification\n */\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getModelDetails: model => dispatch(fetchModelDetails(model))\n  };\n}\n/**\n * Function to receive the state of login api call response\n */\n\n\nfunction mapStateToProps(state) {\n  return {\n    modelData: state.allCarReducer.selectedModelData\n  };\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(ModelOrderConfiguration);","map":{"version":3,"sources":["/Users/anofrancis/Desktop/tesla-web-app/src/components/ModelConfiguration/ModelOrderConfigurations.js"],"names":["React","Component","Grid","connect","compose","Fab","TopBottomTextView","fetchModelDetails","ModelOrderConfiguration","constructor","props","onVariantSelection","variant","setState","selectedVariant","state","bind","componentWillReceiveProps","nextProps","componentDidMount","render","modelName","modelConfig","console","log","variants","map","item","variantDisplayName","variantName","variantData","filter","Object","keys","length","displayName","range","topSpeed","acceleration","time","speed","eachVariant","mapDispatchToProps","dispatch","getModelDetails","model","mapStateToProps","modelData","allCarReducer","selectedModelData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,IADF,QAEO,mBAFP;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,GAAP,MAAgB,uBAAhB,C,CACA;;AACA,OAAOC,iBAAP,MAA8B,sCAA9B;AACA,SAAQC,iBAAR,QAAgC,eAAhC;;;AAEA,MAAMC,uBAAN,SAAsCP,SAAtC,CAAgD;AAC5CQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAarBC,kBAbqB,GAaCC,OAAD,IAAa;AAEhC,WAAKC,QAAL,CAAc;AAACC,QAAAA,eAAe,EAAEF;AAAlB,OAAd,EAFgC,CAGhC;AAEA;AACD,KAnBoB;;AAEf,SAAKG,KAAL,GAAa;AACXD,MAAAA,eAAe,EAAE;AADN,KAAb;AAIA,SAAKH,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBK,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAELC,EAAAA,yBAAyB,CAACC,SAAD,EAAY,CAEpC;;AAUDC,EAAAA,iBAAiB,GAAG,CAClB;AACA;AACA;AAEA;AACD;;AAGDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA6B,KAAKZ,KAAxC;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAsB,KAAKC,KAAjC;AAEAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BF,WAA9B;AAEA,UAAMG,QAAQ,GAAIH,WAAW,IAAIA,WAAW,CAACG,QAA5B,GAAwCH,WAAW,CAACG,QAAZ,CAAqBC,GAArB,CAA0BC,IAAD,IAAU;AAC1F,aAAO;AAACf,QAAAA,OAAO,EAAEe,IAAI,CAACf,OAAf;AAAwBgB,QAAAA,kBAAkB,EAAED,IAAI,CAACE;AAAjD,OAAP;AACH,KAF0D,CAAxC,GAEd,EAFH;AAIFN,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,QAA3B,EAVS,CAYT;;AAEA,UAAMK,WAAW,GAAIR,WAAW,IAAIA,WAAW,CAACG,QAA5B,GAAwCH,WAAW,CAACG,QAAZ,CAAqBM,MAArB,CAA6BJ,IAAD,IAAU;AAC9F,aAAQA,IAAI,CAACf,OAAL,MAAkBE,eAAe,KAAK,EAApB,GAAyBA,eAAzB,GAA2CW,QAAQ,CAAC,CAAD,CAAR,CAAYb,OAAzE,CAAR;AACH,KAF2D,EAEzD,CAFyD,CAAxC,GAEZ,EAFR;AAIAW,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BM,WAA7B;AAEE,wBACI;AAAK,MAAA,KAAK,EAAC,iBAAX;AAAA,gBAEIE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,MAAzB,GAAkC,CAAlC,gBAED,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAC,QAA1B;AAAmC,QAAA,cAAc,EAAC,QAAlD;AAA2D,QAAA,UAAU,EAAC,QAAtE;AAA+E,QAAA,OAAO,EAAE,CAAxF;AAAA,gCACO,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,iCACI;AAAM,YAAA,KAAK,EAAC,WAAZ;AAAA,sBACCZ,WAAW,CAACa;AADb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADP,eAMO,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,SAAS,EAAC,KAA1B;AAAgC,YAAA,OAAO,EAAE,CAAzC;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,qCACI,QAAC,iBAAD;AAAmB,gBAAA,OAAO,EAAEL,WAAW,CAACM,KAAxC;AAA+C,gBAAA,UAAU,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,qCACI,QAAC,iBAAD;AAAmB,gBAAA,OAAO,EAAEN,WAAW,CAACO,QAAxC;AAAkD,gBAAA,UAAU,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJF,eAOE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,qCACI,QAAC,iBAAD;AAAmB,gBAAA,OAAO,EAAG,GAAEP,WAAW,CAACQ,YAAZ,CAAyBC,IAAK,MAA7D;AAAoE,gBAAA,UAAU,EAAG,GAAET,WAAW,CAACQ,YAAZ,CAAyBE,KAAM;AAAlH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANP,eAmBO,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,SAAS,EAAC,QAA1B;AAAmC,YAAA,OAAO,EAAE,CAA5C;AAAA,sBAEEf,QAAQ,CAACC,GAAT,CAAce,WAAD,IAAiB;AAC5B,kCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACA;AAAQ,kBAAA,KAAK,EAAC,KAAd;AAAoB,kBAAA,OAAO,EAAE,KAAK9B,kBAAL,CAAwB8B,WAAW,CAAC7B,OAApC,CAA7B;AAAA,kCAA6E6B,WAAW,CAACb,kBAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBADF;AAKD,aAND;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAnBP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFC,GAkCa;AApCjB;AAAA;AAAA;AAAA;AAAA,YADJ;AAwCD;;AA3F6C;AA8FhD;AACA;AACA;;;AACA,SAASc,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACHC,IAAAA,eAAe,EAAGC,KAAD,IAAWF,QAAQ,CAACpC,iBAAiB,CAACsC,KAAD,CAAlB;AADjC,GAAP;AAGD;AACD;AACA;AACA;;;AACA,SAASC,eAAT,CAAyB/B,KAAzB,EAAgC;AAC9B,SAAO;AACLgC,IAAAA,SAAS,EAAEhC,KAAK,CAACiC,aAAN,CAAoBC;AAD1B,GAAP;AAGD;;AAED,eAAe7C,OAAO,CACpBD,OAAO,CACL2C,eADK,EAELJ,kBAFK,CADa,CAAP,CAKblC,uBALa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Grid\n} from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport compose from 'recompose/compose'\nimport Fab from '@material-ui/core/Fab'\n// import image from '../assets/modelX.png'\nimport TopBottomTextView from '../MinimalSpecView/TopBottomTextView'\nimport {fetchModelDetails} from '../../actions'\n\nclass ModelOrderConfiguration extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n          selectedVariant: ''\n        }\n    \n        this.onVariantSelection = this.onVariantSelection.bind(this);\n      }\n\n  componentWillReceiveProps(nextProps) {\n    \n  }\n\n  onVariantSelection = (variant) => {\n\n    this.setState({selectedVariant: variant});\n    // const {history} = this.props\n\n    // history.push('/modelOrder')\n  }\n\n  componentDidMount() {\n    // const { location } = this.props\n    // const { modelName } = location.state\n    // const { getModelDetails } = this.props\n\n    // getModelDetails(modelName)\n  }\n\n\n  render() {\n    const { modelName, modelConfig } = this.props;\n    const { selectedVariant } = this.state;\n\n    console.log('Model config:::',modelConfig)\n\n    const variants = (modelConfig && modelConfig.variants) ? modelConfig.variants.map((item) => {\n      return {variant: item.variant, variantDisplayName: item.variantName};\n  }) : [];\n\n  console.log('variants:::', variants)\n\n  // const selectedVariant = ;\n\n  const variantData = (modelConfig && modelConfig.variants) ? modelConfig.variants.filter((item) => {\n      return (item.variant === (selectedVariant !== '' ? selectedVariant : variants[0].variant));\n  })[0] : {};\n\n  console.log('variantData::', variantData)\n\n    return (\n        <div class='modelConfigPage'>\n          {\n            Object.keys(variantData).length > 0 ? \n          \n          (<Grid container direction='column' justifyContent='center' alignItems='center' spacing={2}>\n                  <Grid item lg={2}>\n                      <span class='modelName'>\n                      {modelConfig.displayName}\n                      </span>\n                  </Grid>\n                  <Grid item>\n                    <Grid container direction='row' spacing={2}>\n                      <Grid item>\n                          <TopBottomTextView topData={variantData.range} bottomData=\"Est Range\" />\n                      </Grid>\n                      <Grid item>\n                          <TopBottomTextView topData={variantData.topSpeed} bottomData=\"Top Speed\" />\n                      </Grid>\n                      <Grid item>\n                          <TopBottomTextView topData={`${variantData.acceleration.time} sec`} bottomData={`${variantData.acceleration.speed} sec`} />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item>\n                    <Grid container direction='column' spacing={2}>\n                    {\n                      variants.map((eachVariant) => {\n                        return (\n                          <Grid item>\n                          <button class='btn' onClick={this.onVariantSelection(eachVariant.variant)}> {eachVariant.variantDisplayName} </button>\n                          </Grid>\n                        )\n                      })\n                    }\n                    </Grid>\n                  </Grid>\n              </Grid>) : null }\n        </div>\n    )\n  }\n}\n\n/**\n * Function to call the action to call API to send login credentials for verification\n */\nfunction mapDispatchToProps(dispatch) {\n  return {\n      getModelDetails: (model) => dispatch(fetchModelDetails(model))\n  }\n}\n/**\n * Function to receive the state of login api call response\n */\nfunction mapStateToProps(state) {\n  return {\n    modelData: state.allCarReducer.selectedModelData\n  }\n}\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(ModelOrderConfiguration)\n"]},"metadata":{},"sourceType":"module"}