{"ast":null,"code":"import network from '../common/network';\n\nconst receiveAllCars = list => ({\n  type: 'RECEIVE_ALL_CARS',\n  list\n});\n\nconst receuveModelDetails = details => ({\n  type: 'RECEIVE_MODEL_DATA',\n  details\n});\n\nexport function fetchAllCars() {\n  return dispatch => {\n    network.get({\n      url: 'https://tesla-app-server.herokuapp.com/models/all'\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Cars list fetch failed');\n      }\n\n      return response;\n    }).then(result => result.json()).then(result => {\n      dispatch(receiveAllCars(result));\n    }).catch();\n  };\n}\nexport function fetchModelDetails(model) {\n  return dispatch => {\n    network.get({\n      url: `https://tesla-app-server.herokuapp.com/models/${model}`\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Model detail fetch failed');\n      }\n\n      return response;\n    }).then(result => result.json()).then(result => {\n      dispatch(receuveModelDetails(result));\n    }).catch();\n  };\n}\nexport function fetchModelConfiguration(model) {\n  return dispatch => {\n    network.get({\n      url: `https://tesla-app-server.herokuapp.com/models/${model}/configure`\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Model detail fetch failed');\n      }\n\n      return response;\n    }).then(result => result.json()).then(result => {\n      dispatch(receuveModelDetails(result));\n    }).catch();\n  };\n}","map":{"version":3,"sources":["/Users/anofrancis/Desktop/tesla-web-app/src/actions/index.js"],"names":["network","receiveAllCars","list","type","receuveModelDetails","details","fetchAllCars","dispatch","get","url","then","response","ok","Error","result","json","catch","fetchModelDetails","model","fetchModelConfiguration"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,cAAc,GAAIC,IAAD,KAAW;AAC9BC,EAAAA,IAAI,EAAE,kBADwB;AAE9BD,EAAAA;AAF8B,CAAX,CAAvB;;AAKE,MAAME,mBAAmB,GAAIC,OAAD,KAAc;AACxCF,EAAAA,IAAI,EAAE,oBADkC;AAExCE,EAAAA;AAFwC,CAAd,CAA5B;;AAKF,OAAO,SAASC,YAAT,GAAwB;AAC3B,SAAQC,QAAD,IAAc;AACjBP,IAAAA,OAAO,CAACQ,GAAR,CAAY;AAACC,MAAAA,GAAG,EAAE;AAAN,KAAZ,EACCC,IADD,CACOC,QAAD,IAAc;AAClB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;AACD;;AACD,aAAOF,QAAP;AACD,KAND,EAOCD,IAPD,CAOOI,MAAD,IAAYA,MAAM,CAACC,IAAP,EAPlB,EAQCL,IARD,CAQOI,MAAD,IAAY;AAChBP,MAAAA,QAAQ,CAACN,cAAc,CAACa,MAAD,CAAf,CAAR;AACD,KAVD,EAWCE,KAXD;AAYH,GAbD;AAcD;AAED,OAAO,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AACvC,SAAQX,QAAD,IAAc;AACjBP,IAAAA,OAAO,CAACQ,GAAR,CAAY;AAACC,MAAAA,GAAG,EAAG,iDAAgDS,KAAM;AAA7D,KAAZ,EACCR,IADD,CACOC,QAAD,IAAc;AAClB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD;;AACD,aAAOF,QAAP;AACD,KAND,EAOCD,IAPD,CAOOI,MAAD,IAAYA,MAAM,CAACC,IAAP,EAPlB,EAQCL,IARD,CAQOI,MAAD,IAAY;AAChBP,MAAAA,QAAQ,CAACH,mBAAmB,CAACU,MAAD,CAApB,CAAR;AACD,KAVD,EAWCE,KAXD;AAYH,GAbD;AAcD;AAGD,OAAO,SAASG,uBAAT,CAAiCD,KAAjC,EAAwC;AAC7C,SAAQX,QAAD,IAAc;AACjBP,IAAAA,OAAO,CAACQ,GAAR,CAAY;AAACC,MAAAA,GAAG,EAAG,iDAAgDS,KAAM;AAA7D,KAAZ,EACCR,IADD,CACOC,QAAD,IAAc;AAClB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD;;AACD,aAAOF,QAAP;AACD,KAND,EAOCD,IAPD,CAOOI,MAAD,IAAYA,MAAM,CAACC,IAAP,EAPlB,EAQCL,IARD,CAQOI,MAAD,IAAY;AAChBP,MAAAA,QAAQ,CAACH,mBAAmB,CAACU,MAAD,CAApB,CAAR;AACD,KAVD,EAWCE,KAXD;AAYH,GAbD;AAcD","sourcesContent":["import network from '../common/network'\n\nconst receiveAllCars = (list) => ({\n    type: 'RECEIVE_ALL_CARS',\n    list\n  });\n\n  const receuveModelDetails = (details) => ({\n    type: 'RECEIVE_MODEL_DATA',\n    details\n  });\n\nexport function fetchAllCars() {\n    return (dispatch) => {\n        network.get({url: 'https://tesla-app-server.herokuapp.com/models/all'})\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error('Cars list fetch failed')\n          }\n          return response\n        })\n        .then((result) => result.json())\n        .then((result) => {\n          dispatch(receiveAllCars(result))\n        })\n        .catch()\n    }\n  }\n\n  export function fetchModelDetails(model) {\n    return (dispatch) => {\n        network.get({url: `https://tesla-app-server.herokuapp.com/models/${model}`})\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error('Model detail fetch failed')\n          }\n          return response\n        })\n        .then((result) => result.json())\n        .then((result) => {\n          dispatch(receuveModelDetails(result))\n        })\n        .catch()\n    }\n  }\n\n\n  export function fetchModelConfiguration(model) {\n    return (dispatch) => {\n        network.get({url: `https://tesla-app-server.herokuapp.com/models/${model}/configure`})\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error('Model detail fetch failed')\n          }\n          return response\n        })\n        .then((result) => result.json())\n        .then((result) => {\n          dispatch(receuveModelDetails(result))\n        })\n        .catch()\n    }\n  }"]},"metadata":{},"sourceType":"module"}