{"ast":null,"code":"var _jsxFileName = \"/Users/anofrancis/Desktop/tesla-web-app/src/components/modelDetailsGridView.js\";\nimport React, { Component } from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport LeftRightGridLayout from './leftRightGridContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DetailGridView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPlaidSelected: true\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {}\n\n  render() {\n    const {\n      modelData\n    } = this.props;\n    const {\n      isPlaidSelected\n    } = this.state;\n    const plaidVarient = modelData ? modelData.filter(item => {\n      return item.variant == 'PLAID';\n    })[0] : {};\n    const longRangeVariant = modelData ? modelData.filter(item => {\n      return item.variant == 'PLAID';\n    })[0] : {};\n    const selectedVariant = isPlaidSelected ? plaidVarient : longRangeVariant;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"modelDetailDataContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \" Model S Specs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn\",\n        children: \" Plaid \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn\",\n        children: \" Long Ranger \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        style: {\n          maxWidth: 400,\n          marginTop: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(LeftRightGridLayout, {\n            leftData: {\n              'title': 'Range',\n              'value': selectedVariant.range\n            },\n            rightData: {\n              title: 'Power Train',\n              value: selectedVariant.powertrain\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(LeftRightGridLayout, {\n            leftData: {\n              'title': 'Peak Power',\n              'value': selectedVariant.range\n            },\n            rightData: {\n              title: 'Power Train',\n              value: selectedVariant.powertrain\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(LeftRightGridLayout, {\n            leftData: {\n              'title': 'Range',\n              'value': selectedVariant.range\n            },\n            rightData: {\n              title: 'Power Train',\n              value: selectedVariant.powertrain\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(LeftRightGridLayout, {\n            leftData: {\n              'title': 'Range',\n              'value': selectedVariant.range\n            },\n            rightData: {\n              title: 'Power Train',\n              value: selectedVariant.powertrain\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(LeftRightGridLayout, {\n            leftData: {\n              'title': 'Range',\n              'value': selectedVariant.range\n            },\n            rightData: {\n              title: 'Power Train',\n              value: selectedVariant.powertrain\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(LeftRightGridLayout, {\n            leftData: {\n              'title': 'Range',\n              'value': selectedVariant.range\n            },\n            rightData: {\n              title: 'Power Train',\n              value: selectedVariant.powertrain\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default DetailGridView;","map":{"version":3,"sources":["/Users/anofrancis/Desktop/tesla-web-app/src/components/modelDetailsGridView.js"],"names":["React","Component","Typography","Grid","LeftRightGridLayout","DetailGridView","constructor","props","state","isPlaidSelected","componentWillReceiveProps","nextProps","render","modelData","plaidVarient","filter","item","variant","longRangeVariant","selectedVariant","maxWidth","marginTop","range","title","value","powertrain"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,UADF,EAEEC,IAFF,QAGO,mBAHP;AAIA,OAAOC,mBAAP,MAAgC,0BAAhC;;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AACnCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAE;AADN,KAAb;AAGD;;AAGLC,EAAAA,yBAAyB,CAACC,SAAD,EAAY,CAEpC;;AAGDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKN,KAA3B;AACA,UAAM;AAACE,MAAAA;AAAD,QAAoB,KAAKD,KAA/B;AAEA,UAAMM,YAAY,GAAGD,SAAS,GAAGA,SAAS,CAACE,MAAV,CAAkBC,IAAD,IAAU;AACxD,aAAQA,IAAI,CAACC,OAAL,IAAgB,OAAxB;AACH,KAFgC,EAE9B,CAF8B,CAAH,GAEtB,EAFR;AAIA,UAAMC,gBAAgB,GAAGL,SAAS,GAAGA,SAAS,CAACE,MAAV,CAAkBC,IAAD,IAAU;AAC5D,aAAQA,IAAI,CAACC,OAAL,IAAgB,OAAxB;AACH,KAFoC,EAElC,CAFkC,CAAH,GAE1B,EAFR;AAIA,UAAME,eAAe,GAAGV,eAAe,GAAGK,YAAH,GAAkBI,gBAAzD;AAEA,wBACA;AAAK,MAAA,KAAK,EAAC,0BAAX;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAC,QAA1B;AAAmC,QAAA,KAAK,EAAE;AAACE,UAAAA,QAAQ,EAAE,GAAX;AAAgBC,UAAAA,SAAS,EAAE;AAA3B,SAA1C;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,mBAAD;AAAqB,YAAA,QAAQ,EAAE;AAAC,uBAAS,OAAV;AAAmB,uBAASF,eAAe,CAACG;AAA5C,aAA/B;AAAmF,YAAA,SAAS,EAAE;AAACC,cAAAA,KAAK,EAAE,aAAR;AAAuBC,cAAAA,KAAK,EAAEL,eAAe,CAACM;AAA9C;AAA9F;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,mBAAD;AACI,YAAA,QAAQ,EAAE;AAAC,uBAAS,YAAV;AAAwB,uBAASN,eAAe,CAACG;AAAjD,aADd;AAEI,YAAA,SAAS,EAAE;AAACC,cAAAA,KAAK,EAAE,aAAR;AAAuBC,cAAAA,KAAK,EAAEL,eAAe,CAACM;AAA9C;AAFf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAUI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,mBAAD;AAAqB,YAAA,QAAQ,EAAE;AAAC,uBAAS,OAAV;AAAmB,uBAASN,eAAe,CAACG;AAA5C,aAA/B;AAAmF,YAAA,SAAS,EAAE;AAACC,cAAAA,KAAK,EAAE,aAAR;AAAuBC,cAAAA,KAAK,EAAEL,eAAe,CAACM;AAA9C;AAA9F;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAaI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,mBAAD;AAAqB,YAAA,QAAQ,EAAE;AAAC,uBAAS,OAAV;AAAmB,uBAASN,eAAe,CAACG;AAA5C,aAA/B;AAAmF,YAAA,SAAS,EAAE;AAACC,cAAAA,KAAK,EAAE,aAAR;AAAuBC,cAAAA,KAAK,EAAEL,eAAe,CAACM;AAA9C;AAA9F;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAgBI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,mBAAD;AAAqB,YAAA,QAAQ,EAAE;AAAC,uBAAS,OAAV;AAAmB,uBAASN,eAAe,CAACG;AAA5C,aAA/B;AAAmF,YAAA,SAAS,EAAE;AAACC,cAAAA,KAAK,EAAE,aAAR;AAAuBC,cAAAA,KAAK,EAAEL,eAAe,CAACM;AAA9C;AAA9F;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAhBJ,eAmBI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,mBAAD;AAAqB,YAAA,QAAQ,EAAE;AAAC,uBAAS,OAAV;AAAmB,uBAASN,eAAe,CAACG;AAA5C,aAA/B;AAAmF,YAAA,SAAS,EAAE;AAACC,cAAAA,KAAK,EAAE,aAAR;AAAuBC,cAAAA,KAAK,EAAEL,eAAe,CAACM;AAA9C;AAA9F;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AA+BD;;AA3DoC;;AA+DvC,eAAepB,cAAf","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Typography,\n  Grid\n} from '@material-ui/core'\nimport LeftRightGridLayout from './leftRightGridContainer'\n\nclass DetailGridView extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n          isPlaidSelected: true\n        }\n      }\n    \n\n  componentWillReceiveProps(nextProps) {\n    \n  }\n\n\n  render() {\n    const { modelData } = this.props\n    const {isPlaidSelected} = this.state;\n\n    const plaidVarient = modelData ? modelData.filter((item) => {\n        return (item.variant == 'PLAID');\n    })[0] : {};\n\n    const longRangeVariant = modelData ? modelData.filter((item) => {\n        return (item.variant == 'PLAID');\n    })[0] : {};\n\n    const selectedVariant = isPlaidSelected ? plaidVarient : longRangeVariant\n\n    return (\n    <div class='modelDetailDataContainer'>\n        <Typography variant=\"h5\" > Model S Specs</Typography>\n        <button class='btn'> Plaid </button>\n        <button class='btn'> Long Ranger </button>\n        <Grid container direction='column' style={{maxWidth: 400, marginTop: 10}}>\n            <Grid item>\n                <LeftRightGridLayout leftData={{'title': 'Range', 'value': selectedVariant.range}} rightData={{title: 'Power Train', value: selectedVariant.powertrain}}/>  \n            </Grid>\n            <Grid item>\n                <LeftRightGridLayout \n                    leftData={{'title': 'Peak Power', 'value': selectedVariant.range}} \n                    rightData={{title: 'Power Train', value: selectedVariant.powertrain}}/\n                >  \n            </Grid>\n            <Grid item>\n                <LeftRightGridLayout leftData={{'title': 'Range', 'value': selectedVariant.range}} rightData={{title: 'Power Train', value: selectedVariant.powertrain}}/>  \n            </Grid>\n            <Grid item>\n                <LeftRightGridLayout leftData={{'title': 'Range', 'value': selectedVariant.range}} rightData={{title: 'Power Train', value: selectedVariant.powertrain}}/>  \n            </Grid>\n            <Grid item>\n                <LeftRightGridLayout leftData={{'title': 'Range', 'value': selectedVariant.range}} rightData={{title: 'Power Train', value: selectedVariant.powertrain}}/>  \n            </Grid>\n            <Grid item>\n                <LeftRightGridLayout leftData={{'title': 'Range', 'value': selectedVariant.range}} rightData={{title: 'Power Train', value: selectedVariant.powertrain}}/>  \n            </Grid>\n        </Grid>\n    </div>\n        \n    )\n  }\n}\n\n\nexport default DetailGridView\n"]},"metadata":{},"sourceType":"module"}