{"ast":null,"code":"var _jsxFileName = \"/Users/anofrancis/Desktop/tesla-web-app/src/components/modelDetailsGridView.js\";\nimport React, { Component } from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport LeftRightGridLayout from './leftRightGridContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DetailGridView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPlaidSelected: true\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {}\n\n  render() {\n    const {\n      modelData\n    } = this.props;\n    const {\n      isPlaidSelected\n    } = this.state;\n    const plaidVarient = modelData ? modelData.filter(item => {\n      return item.variant === 'PLAID';\n    })[0] : {};\n    const longRangeVariant = modelData ? modelData.filter(item => {\n      return item.variant === 'PLAID';\n    })[0] : {};\n    const selectedVariant = isPlaidSelected ? plaidVarient : longRangeVariant;\n    console.log('selectedVariant', selectedVariant);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"modelDetailDataContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \" Model S Specs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn\",\n        children: \" Plaid \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"btn\",\n        children: \" Long Ranger \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 2,\n        style: {\n          maxWidth: 400,\n          marginTop: 30\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(LeftRightGridLayout, {\n            leftData: {\n              title: 'Range',\n              'value': selectedVariant.range\n            },\n            rightData: {\n              title: 'Power Train',\n              value: selectedVariant.powertrain\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(LeftRightGridLayout, {\n            leftData: {\n              'title': 'Peak Power',\n              'value': selectedVariant.range\n            },\n            rightData: {\n              title: 'Acceleration',\n              value: `${selectedVariant.acceleration.time}s ${selectedVariant.acceleration.speed}mph`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(LeftRightGridLayout, {\n            leftData: {\n              'title': 'Top Speed',\n              'value': selectedVariant.topSpeed\n            },\n            rightData: {\n              title: 'Drag Coefficient',\n              value: selectedVariant.dragCoefficient\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(LeftRightGridLayout, {\n            leftData: {\n              'title': 'Weight',\n              'value': `${selectedVariant.weight}lbs`\n            },\n            rightData: {\n              title: 'Wheels',\n              value: `${selectedVariant.wheels[0]}\" or ${selectedVariant.wheels[1]}\"`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(LeftRightGridLayout, {\n            leftData: {\n              'title': 'Cargo Capacity',\n              'value': selectedVariant.cargo\n            },\n            rightData: {\n              title: 'Charging',\n              value: selectedVariant.superchargingMax\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default DetailGridView;","map":{"version":3,"sources":["/Users/anofrancis/Desktop/tesla-web-app/src/components/modelDetailsGridView.js"],"names":["React","Component","Typography","Grid","LeftRightGridLayout","DetailGridView","constructor","props","state","isPlaidSelected","componentWillReceiveProps","nextProps","render","modelData","plaidVarient","filter","item","variant","longRangeVariant","selectedVariant","console","log","maxWidth","marginTop","title","range","value","powertrain","acceleration","time","speed","topSpeed","dragCoefficient","weight","wheels","cargo","superchargingMax"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,UADF,EAEEC,IAFF,QAGO,mBAHP;AAIA,OAAOC,mBAAP,MAAgC,0BAAhC;;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AACnCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAE;AADN,KAAb;AAGD;;AAGLC,EAAAA,yBAAyB,CAACC,SAAD,EAAY,CAEpC;;AAGDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKN,KAA3B;AACA,UAAM;AAACE,MAAAA;AAAD,QAAoB,KAAKD,KAA/B;AAEA,UAAMM,YAAY,GAAGD,SAAS,GAAGA,SAAS,CAACE,MAAV,CAAkBC,IAAD,IAAU;AACxD,aAAQA,IAAI,CAACC,OAAL,KAAiB,OAAzB;AACH,KAFgC,EAE9B,CAF8B,CAAH,GAEtB,EAFR;AAIA,UAAMC,gBAAgB,GAAGL,SAAS,GAAGA,SAAS,CAACE,MAAV,CAAkBC,IAAD,IAAU;AAC5D,aAAQA,IAAI,CAACC,OAAL,KAAiB,OAAzB;AACH,KAFoC,EAElC,CAFkC,CAAH,GAE1B,EAFR;AAIA,UAAME,eAAe,GAAGV,eAAe,GAAGK,YAAH,GAAkBI,gBAAzD;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,eAA/B;AAEA,wBACA;AAAK,MAAA,KAAK,EAAC,0BAAX;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAC,QAA1B;AAAmC,QAAA,OAAO,EAAE,CAA5C;AAA+C,QAAA,KAAK,EAAE;AAACG,UAAAA,QAAQ,EAAE,GAAX;AAAgBC,UAAAA,SAAS,EAAE;AAA3B,SAAtD;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,mBAAD;AACA,YAAA,QAAQ,EAAE;AAACC,cAAAA,KAAK,EAAE,OAAR;AAAiB,uBAASL,eAAe,CAACM;AAA1C,aADV;AAEA,YAAA,SAAS,EAAE;AAACD,cAAAA,KAAK,EAAE,aAAR;AAAuBE,cAAAA,KAAK,EAAEP,eAAe,CAACQ;AAA9C;AAFX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,mBAAD;AACI,YAAA,QAAQ,EAAE;AAAC,uBAAS,YAAV;AAAwB,uBAASR,eAAe,CAACM;AAAjD,aADd;AAEI,YAAA,SAAS,EACL;AACID,cAAAA,KAAK,EAAE,cADX;AAEIE,cAAAA,KAAK,EAAG,GAAEP,eAAe,CAACS,YAAhB,CAA6BC,IAAK,KAAIV,eAAe,CAACS,YAAhB,CAA6BE,KAAM;AAFvF;AAHR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAkBI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,mBAAD;AACA,YAAA,QAAQ,EAAE;AAAC,uBAAS,WAAV;AAAuB,uBAASX,eAAe,CAACY;AAAhD,aADV;AAEA,YAAA,SAAS,EAAE;AAACP,cAAAA,KAAK,EAAE,kBAAR;AAA4BE,cAAAA,KAAK,EAAEP,eAAe,CAACa;AAAnD;AAFX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAlBJ,eAwBI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,mBAAD;AACA,YAAA,QAAQ,EAAE;AAAC,uBAAS,QAAV;AAAoB,uBAAU,GAAEb,eAAe,CAACc,MAAO;AAAvD,aADV;AAEA,YAAA,SAAS,EAAE;AAACT,cAAAA,KAAK,EAAE,QAAR;AAAkBE,cAAAA,KAAK,EAAG,GAAEP,eAAe,CAACe,MAAhB,CAAuB,CAAvB,CAA0B,QAAOf,eAAe,CAACe,MAAhB,CAAuB,CAAvB,CAA0B;AAAvF;AAFX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAxBJ,eA8BI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACI,QAAC,mBAAD;AACA,YAAA,QAAQ,EAAE;AAAC,uBAAS,gBAAV;AAA4B,uBAASf,eAAe,CAACgB;AAArD,aADV;AAEA,YAAA,SAAS,EAAE;AAACX,cAAAA,KAAK,EAAE,UAAR;AAAoBE,cAAAA,KAAK,EAAEP,eAAe,CAACiB;AAA3C;AAFX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AA6CD;;AA3EoC;;AA+EvC,eAAe/B,cAAf","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Typography,\n  Grid\n} from '@material-ui/core'\nimport LeftRightGridLayout from './leftRightGridContainer'\n\nclass DetailGridView extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n          isPlaidSelected: true\n        }\n      }\n    \n\n  componentWillReceiveProps(nextProps) {\n    \n  }\n\n\n  render() {\n    const { modelData } = this.props\n    const {isPlaidSelected} = this.state;\n\n    const plaidVarient = modelData ? modelData.filter((item) => {\n        return (item.variant === 'PLAID');\n    })[0] : {};\n\n    const longRangeVariant = modelData ? modelData.filter((item) => {\n        return (item.variant === 'PLAID');\n    })[0] : {};\n\n    const selectedVariant = isPlaidSelected ? plaidVarient : longRangeVariant\n\n    console.log('selectedVariant', selectedVariant)\n\n    return (\n    <div class='modelDetailDataContainer'>\n        <Typography variant=\"h5\" > Model S Specs</Typography>\n        <button class='btn'> Plaid </button>\n        <button class='btn'> Long Ranger </button>\n        <Grid container direction='column' spacing={2} style={{maxWidth: 400, marginTop: 30}}>\n            <Grid item>\n                <LeftRightGridLayout \n                leftData={{title: 'Range', 'value': selectedVariant.range}} \n                rightData={{title: 'Power Train', value: selectedVariant.powertrain}}\n                />  \n            </Grid>\n            <Grid item>\n                <LeftRightGridLayout \n                    leftData={{'title': 'Peak Power', 'value': selectedVariant.range}} \n                    rightData={\n                        {\n                            title: 'Acceleration', \n                            value: `${selectedVariant.acceleration.time}s ${selectedVariant.acceleration.speed}mph`\n                        }\n                    }\n                />  \n            </Grid>\n            <Grid item>\n                <LeftRightGridLayout \n                leftData={{'title': 'Top Speed', 'value': selectedVariant.topSpeed}} \n                rightData={{title: 'Drag Coefficient', value: selectedVariant.dragCoefficient}}\n                />  \n            </Grid>\n            <Grid item>\n                <LeftRightGridLayout \n                leftData={{'title': 'Weight', 'value': `${selectedVariant.weight}lbs`}} \n                rightData={{title: 'Wheels', value: `${selectedVariant.wheels[0]}\" or ${selectedVariant.wheels[1]}\"`}}\n                />  \n            </Grid>\n            <Grid item>\n                <LeftRightGridLayout \n                leftData={{'title': 'Cargo Capacity', 'value': selectedVariant.cargo}} \n                rightData={{title: 'Charging', value: selectedVariant.superchargingMax}}\n                />  \n            </Grid>\n        </Grid>\n    </div>\n        \n    )\n  }\n}\n\n\nexport default DetailGridView\n"]},"metadata":{},"sourceType":"module"}