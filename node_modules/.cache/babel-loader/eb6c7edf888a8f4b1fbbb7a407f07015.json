{"ast":null,"code":"var _jsxFileName = \"/Users/anofrancis/Desktop/tesla-web-app/src/components/AllCarsPage.js\";\nimport React, { Component } from 'react';\nimport { withStyles, Card, CardContent, Typography, TextField, Grid, Button, Paper, CardMedia } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport image from '../assets/compositor\\ 1.png';\nimport CarCard from './carCard';\nimport { fetchAllCars } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LandingPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = () => {\n      console.log(\"Clicked...\");\n      const {\n        history\n      } = this.props; // history.push('/secondPage')\n    };\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.receiveAllCarModels();\n  }\n\n  componentWillReceiveProps(nextProps) {}\n\n  render() {\n    const {\n      models\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allCarsPage\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: \"mainGrid\",\n        direction: \"column\",\n        alignItems: \"center\",\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: \"allModelText\",\n            children: \"All Models\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            alignItems: \"center\",\n            justify: \"center\",\n            spacing: 2 // style={{ minHeight: '100vh' }}\n            ,\n            children: models.map(item => {\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                className: \"carGrid\",\n                item: true,\n                onClick: this.onClick,\n                children: /*#__PURE__*/_jsxDEV(CarCard, {\n                  title: item.displayName,\n                  modelName: item.model\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 29\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/**\n * Function to call the action to call API to send login credentials for verification\n */\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    receiveAllCarModels: () => dispatch(fetchAllCars())\n  };\n}\n/**\n * Function to receive the state of login api call response\n */\n\n\nfunction mapStateToProps(state) {\n  return {\n    models: state.allCarReducer.models\n  };\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(LandingPage);","map":{"version":3,"sources":["/Users/anofrancis/Desktop/tesla-web-app/src/components/AllCarsPage.js"],"names":["React","Component","withStyles","Card","CardContent","Typography","TextField","Grid","Button","Paper","CardMedia","connect","compose","image","CarCard","fetchAllCars","LandingPage","constructor","props","onClick","console","log","history","bind","componentDidMount","receiveAllCarModels","componentWillReceiveProps","nextProps","render","models","map","item","displayName","model","mapDispatchToProps","dispatch","mapStateToProps","state","allCarReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  withStyles,\n  Card,\n  CardContent,\n  Typography,\n  TextField,\n  Grid,\n  Button,\n  Paper,\n  CardMedia\n} from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport compose from 'recompose/compose'\nimport image from '../assets/compositor\\ 1.png'\nimport CarCard from './carCard'\nimport {fetchAllCars} from '../actions'\n\nclass LandingPage extends Component {\n  constructor(props) {\n    super(props)\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.receiveAllCarModels()\n}\n\n  componentWillReceiveProps(nextProps) {\n \n  }\n\nonClick = () => {\n        console.log(\"Clicked...\");\n        const {history} = this.props;\n\n        // history.push('/secondPage')\n}\n\n  render() {\n    const { models } = this.props\n\n    return (\n      <div className=\"allCarsPage\">\n          <Grid container\n           className=\"mainGrid\"\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\">\n              <Grid item>\n              <Typography variant=\"h6\" className=\"allModelText\">\n          All Models\n        </Typography>\n                </Grid>\n              <Grid item>\n        <Grid container\n        direction=\"row\"\n        alignItems=\"center\"\n        justify=\"center\"\n        spacing={2}\n        // style={{ minHeight: '100vh' }}\n        >\n            {\n                models.map((item) => {\n                        return (\n                            <Grid className=\"carGrid\" item onClick={this.onClick} >\n                                <CarCard  title={item.displayName} modelName={item.model}/>\n                            </Grid>\n                        )\n                    \n                }) \n            }\n            \n        </Grid>\n        </Grid>\n        </Grid>\n      </div>\n    )\n  }\n}\n\n/**\n * Function to call the action to call API to send login credentials for verification\n */\nfunction mapDispatchToProps(dispatch) {\n  return {\n    receiveAllCarModels: () => dispatch(fetchAllCars()),\n  }\n}\n/**\n * Function to receive the state of login api call response\n */\nfunction mapStateToProps(state) {\n  return {\n      models: state.allCarReducer.models\n  }\n}\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(LandingPage)\n"]},"metadata":{},"sourceType":"module"}