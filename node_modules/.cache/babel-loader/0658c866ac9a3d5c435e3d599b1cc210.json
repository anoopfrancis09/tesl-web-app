{"ast":null,"code":"var _jsxFileName = \"/Users/anofrancis/Desktop/tesl-web-app/src/components/ModelDetailsGridView.js\";\nimport React, { Component } from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport LeftRightGridLayout from './LeftRightGridContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DetailGridView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onVariantChange = variant => () => {\n      this.setState({\n        selectedVariant: variant\n      });\n    };\n\n    this.state = {\n      selectedVariant: ''\n    };\n    this.onVariantChange = this.onVariantChange.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {}\n\n  componentDidMount() {}\n\n  render() {\n    const {\n      modelData,\n      displayName\n    } = this.props;\n    const {\n      selectedVariant\n    } = this.state;\n    const variants = modelData ? modelData.map(item => {\n      return {\n        variant: item.variant,\n        variantDisplayName: item.variantName\n      };\n    }) : [];\n    const variantData = modelData ? modelData.filter(item => {\n      return item.variant === (selectedVariant !== '' ? selectedVariant : variants[0].variant);\n    })[0] : {};\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"modelDetailDataContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), variants.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          class: selectedVariant === '' && index === 0 || selectedVariant === item.variant ? 'variantButtonActive' : 'variantButton',\n          onClick: this.onVariantChange(item.variant),\n          children: [\" \", item.variantDisplayName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 2,\n        style: {\n          maxWidth: 400,\n          marginTop: 30\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(LeftRightGridLayout, {\n            leftData: {\n              title: 'Range',\n              'value': variantData.range\n            },\n            rightData: {\n              title: 'Power Train',\n              value: variantData.powertrain\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(LeftRightGridLayout, {\n            leftData: {\n              'title': 'Peak Power',\n              'value': variantData.range\n            },\n            rightData: {\n              title: 'Acceleration',\n              value: `${variantData.acceleration.time}s ${variantData.acceleration.speed}mph`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(LeftRightGridLayout, {\n            leftData: {\n              'title': 'Top Speed',\n              'value': variantData.topSpeed\n            },\n            rightData: {\n              title: 'Drag Coefficient',\n              value: variantData.dragCoefficient\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(LeftRightGridLayout, {\n            leftData: {\n              'title': 'Weight',\n              'value': `${variantData.weight}lbs`\n            },\n            rightData: {\n              title: 'Wheels',\n              value: `${variantData.wheels[0]}\" or ${variantData.wheels[1]}\"`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(LeftRightGridLayout, {\n            leftData: {\n              'title': 'Cargo Capacity',\n              'value': variantData.cargo\n            },\n            rightData: {\n              title: 'Charging',\n              value: variantData.superchargingMax\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default DetailGridView;","map":{"version":3,"sources":["/Users/anofrancis/Desktop/tesl-web-app/src/components/ModelDetailsGridView.js"],"names":["React","Component","Typography","Grid","LeftRightGridLayout","DetailGridView","constructor","props","onVariantChange","variant","setState","selectedVariant","state","bind","componentWillReceiveProps","nextProps","componentDidMount","render","modelData","displayName","variants","map","item","variantDisplayName","variantName","variantData","filter","index","maxWidth","marginTop","title","range","value","powertrain","acceleration","time","speed","topSpeed","dragCoefficient","weight","wheels","cargo","superchargingMax"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Typography,\n  Grid\n} from '@material-ui/core'\nimport LeftRightGridLayout from './LeftRightGridContainer'\n\nclass DetailGridView extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n          selectedVariant: ''\n        }\n\n        this.onVariantChange = this.onVariantChange.bind(this);\n      }\n    \n\n  componentWillReceiveProps(nextProps) {\n    \n  }\n\n  onVariantChange = (variant) => () => {\n\n    this.setState({selectedVariant: variant})\n}\n\n  componentDidMount() {\n\n  }\n\n\n  render() {\n    const { modelData, displayName } = this.props\n    const {selectedVariant} = this.state;\n\n\n    const variants = modelData ? modelData.map((item) => {\n        return {variant: item.variant, variantDisplayName: item.variantName};\n    }) : [];\n\n    const variantData = modelData ? modelData.filter((item) => {\n        return (item.variant === (selectedVariant !== '' ? selectedVariant : variants[0].variant));\n    })[0] : {};\n\n    return (\n    <div class='modelDetailDataContainer'>\n        <Typography variant=\"h5\" >{displayName}</Typography>\n        \n        {\n            variants.map((item, index) => {\n                return (\n                    <button class= {(selectedVariant === '' && index === 0) || selectedVariant === item.variant ? 'variantButtonActive' : 'variantButton'} onClick={this.onVariantChange(item.variant)}> {item.variantDisplayName} </button>\n                )\n            })\n        }\n        <Grid container direction='column' spacing={2} style={{maxWidth: 400, marginTop: 30}}>\n            <Grid item>\n                <LeftRightGridLayout \n                leftData={{title: 'Range', 'value': variantData.range}} \n                rightData={{title: 'Power Train', value: variantData.powertrain}}\n                />  \n            </Grid>\n            <Grid item>\n                <LeftRightGridLayout \n                    leftData={{'title': 'Peak Power', 'value': variantData.range}} \n                    rightData={\n                        {\n                            title: 'Acceleration', \n                            value: `${variantData.acceleration.time}s ${variantData.acceleration.speed}mph`\n                        }\n                    }\n                />  \n            </Grid>\n            <Grid item>\n                <LeftRightGridLayout \n                leftData={{'title': 'Top Speed', 'value': variantData.topSpeed}} \n                rightData={{title: 'Drag Coefficient', value: variantData.dragCoefficient}}\n                />  \n            </Grid>\n            <Grid item>\n                <LeftRightGridLayout \n                leftData={{'title': 'Weight', 'value': `${variantData.weight}lbs`}} \n                rightData={{title: 'Wheels', value: `${variantData.wheels[0]}\" or ${variantData.wheels[1]}\"`}}\n                />  \n            </Grid>\n            <Grid item>\n                <LeftRightGridLayout \n                leftData={{'title': 'Cargo Capacity', 'value': variantData.cargo}} \n                rightData={{title: 'Charging', value: variantData.superchargingMax}}\n                />  \n            </Grid>\n        </Grid>\n    </div>\n        \n    )\n  }\n}\n\n\nexport default DetailGridView\n"]},"metadata":{},"sourceType":"module"}