{"ast":null,"code":"var _jsxFileName = \"/Users/anofrancis/Desktop/tesla-web-app/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport { Route, Switch, Redirect, BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport withWidth, { isWidthDown } from '@material-ui/core/withWidth';\nimport configureStore from './store';\nimport './App.css';\nimport 'animate.css';\nimport { IntlProvider } from './utils/i18n/intlContext';\nimport WithRoot from './withRoot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  render() {\n    const {\n      width\n    } = this.props;\n    const {\n      currentLang,\n      menuToggled\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(IntlProvider, {\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              render: props => /*#__PURE__*/_jsxDEV(Login, { ...props,\n                loginHandler: this.handleLogin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/reset-password\" // component={ResetPasswordComponent }\n              ,\n              render: props => /*#__PURE__*/_jsxDEV(ResetPasswordComponent, { ...props,\n                resetPageStatus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/set-new-password/token=:resetToken\",\n              component: RedirectPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/app/:pathId\",\n              render: props => /*#__PURE__*/_jsxDEV(LoggedInPages, { ...props,\n                menuToggle: this.menuToggle,\n                currentLang: currentLang,\n                setLangIndex: this.setLangIndex,\n                toggled: menuToggled,\n                device: width // loginHandler={this.handleLogin}\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n              from: \"/\",\n              exact: true,\n              to: \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              component: NotFound404\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withWidth()(WithRoot(App));","map":{"version":3,"sources":["/Users/anofrancis/Desktop/tesla-web-app/src/App.js"],"names":["React","Component","Route","Switch","Redirect","BrowserRouter","Router","Provider","withWidth","isWidthDown","configureStore","IntlProvider","WithRoot","App","render","width","props","currentLang","menuToggled","state","store","handleLogin","RedirectPage","menuToggle","setLangIndex","NotFound404"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,KADF,EAEEC,MAFF,EAGEC,QAHF,EAIEC,aAAa,IAAIC,MAJnB,QAKO,kBALP;AAMA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,IAAoBC,WAApB,QAAuC,6BAAvC;AACA,OAAOC,cAAP,MAA2B,SAA3B;AACA,OAAO,WAAP;AACA,OAAO,aAAP;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,GAAN,SAAkBZ,SAAlB,CAA4B;AAC1Ba,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAA+B,KAAKC,KAA1C;AACA,wBACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEC,KAAjB;AAAA,6BACE,QAAC,YAAD;AAAA,+BACE,QAAC,MAAD;AAAA,iCACE,QAAC,MAAD;AAAA,oCAEE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,MAAM,EAAGJ,KAAD,iBACN,QAAC,KAAD,OAAWA,KAAX;AAAkB,gBAAA,YAAY,EAAE,KAAKK;AAArC;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,oBAFF,eAQE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,iBADP,CAEE;AAFF;AAGE,cAAA,MAAM,EAAGL,KAAD,iBACN,QAAC,sBAAD,OAA4BA,KAA5B;AAAmC,gBAAA,eAAe;AAAlD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,oBARF,eAeE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,qCADP;AAEE,cAAA,SAAS,EAAEM;AAFb;AAAA;AAAA;AAAA;AAAA,oBAfF,eAoBE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,cADP;AAEE,cAAA,MAAM,EAAGN,KAAD,iBACN,QAAC,aAAD,OACMA,KADN;AAEE,gBAAA,UAAU,EAAE,KAAKO,UAFnB;AAGE,gBAAA,WAAW,EAAEN,WAHf;AAIE,gBAAA,YAAY,EAAE,KAAKO,YAJrB;AAKE,gBAAA,OAAO,EAAEN,WALX;AAME,gBAAA,MAAM,EAAEH,KANV,CAOE;;AAPF;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,oBApBF,eAmCE,QAAC,QAAD;AAAU,cAAA,IAAI,EAAC,GAAf;AAAmB,cAAA,KAAK,MAAxB;AAAyB,cAAA,EAAE,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,oBAnCF,eAoCE,QAAC,KAAD;AAAO,cAAA,SAAS,EAAEU;AAAlB;AAAA;AAAA;AAAA;AAAA,oBApCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA8CD;;AAlDyB;;AAqD5B,eAAejB,SAAS,GAAGI,QAAQ,CAACC,GAAD,CAAX,CAAxB","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react'\nimport {\n  Route,\n  Switch,\n  Redirect,\n  BrowserRouter as Router\n} from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport withWidth, { isWidthDown } from '@material-ui/core/withWidth'\nimport configureStore from './store'\nimport './App.css'\nimport 'animate.css'\nimport { IntlProvider } from './utils/i18n/intlContext'\nimport WithRoot from './withRoot'\n\nclass App extends Component {\n  render() {\n    const { width } = this.props\n    const { currentLang, menuToggled } = this.state\n    return (\n      <Provider store={store}>\n        <IntlProvider>\n          <Router>\n            <Switch>\n              {/* <Route path=\"/login\" component={Login} /> */}\n              <Route\n                path=\"/login\"\n                render={(props) => (\n                  <Login {...props} loginHandler={this.handleLogin} />\n                )}\n              />\n              <Route\n                path=\"/reset-password\"\n                // component={ResetPasswordComponent }\n                render={(props) => (\n                  <ResetPasswordComponent {...props} resetPageStatus />\n                )}\n              />\n              <Route\n                path=\"/set-new-password/token=:resetToken\"\n                component={RedirectPage}\n              />\n              {/* {loggedinStatus ? ( */}\n              <Route\n                path=\"/app/:pathId\"\n                render={(props) => (\n                  <LoggedInPages\n                    {...props}\n                    menuToggle={this.menuToggle}\n                    currentLang={currentLang}\n                    setLangIndex={this.setLangIndex}\n                    toggled={menuToggled}\n                    device={width}\n                    // loginHandler={this.handleLogin}\n                  />\n                )}\n              />\n              {/* ) : null} */}\n              <Redirect from=\"/\" exact to=\"/login\" />\n              <Route component={NotFound404} />\n            </Switch>\n          </Router>\n        </IntlProvider>\n      </Provider>\n    )\n  }\n}\n\nexport default withWidth()(WithRoot(App))\n"]},"metadata":{},"sourceType":"module"}