{"ast":null,"code":"var _jsxFileName = \"/Users/anofrancis/Desktop/tesl-web-app/src/components/ModelConfiguration/ModelOrderPage.js\";\nimport React, { Component } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport Fab from '@material-ui/core/Fab'; // import image from '../assets/modelX.png'\n\nimport modelS from '../../assets/modelS.png';\nimport whiteModelS from '../../assets/compositor\\ 1.png';\nimport redModelS from '../../assets/compositor\\ (1)\\ 1.png';\nimport ModelOrderConfiguration from './ModelOrderConfigurations';\nimport { fetchModelConfiguration } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModelOrderMainPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onColorSelectionChange = color => {\n      const colorCode = color.toLowerCase().includes('red') ? 'red' : 'white';\n      this.setState({\n        selectedColor: colorCode\n      });\n    };\n\n    this.onOrderSelection = userData => {\n      const {\n        history,\n        modelConfig\n      } = this.props; // this.timeout(100000);\n\n      history.push({\n        pathname: '/finalOrderPage',\n        state: {\n          modelConfig,\n          userData\n        }\n      });\n    };\n\n    this.onclickExplore = () => () => {\n      console.log('Coming heree....');\n      const {\n        history,\n        location\n      } = this.props;\n      const {\n        modelName\n      } = location.state;\n      history.push({\n        pathname: '/carDetails',\n        state: {\n          modelName\n        }\n      });\n    };\n\n    this.state = {\n      selectedColor: 'white'\n    };\n    this.onColorSelectionChange = this.onColorSelectionChange.bind(this);\n    this.onOrderSelection = this.onOrderSelection.bind(this);\n    this.onclickExplore = this.onclickExplore.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {}\n\n  timeout(ms) {\n    //pass a time in milliseconds to this function\n    console.log('Coming here.....');\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  componentDidMount() {\n    const {\n      location\n    } = this.props;\n    const {\n      modelName\n    } = location.state;\n    const {\n      getModelConfig\n    } = this.props;\n    getModelConfig(modelName);\n  }\n\n  render() {\n    const {\n      location,\n      modelConfig,\n      history\n    } = this.props;\n    const {\n      modelName\n    } = location.state;\n    const {\n      selectedColor\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: modelConfig ? /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          backgroundColor: 'white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 7,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedColor === 'white' ? whiteModelS : redModelS,\n            alt: \"modelS\",\n            class: \"orderModelImage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 5,\n          style: {\n            zIndex: 999\n          },\n          children: /*#__PURE__*/_jsxDEV(ModelOrderConfiguration, {\n            onclickExplore: this.onclickExplore,\n            onOrderSelection: this.onOrderSelection,\n            onColorChange: this.onColorSelectionChange,\n            history: history,\n            modelName: modelName,\n            modelConfig: modelConfig\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 10\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getModelConfig: model => dispatch(fetchModelConfiguration(model))\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    modelConfig: state.allCarReducer.selectedModelConfig\n  };\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(ModelOrderMainPage);","map":{"version":3,"sources":["/Users/anofrancis/Desktop/tesl-web-app/src/components/ModelConfiguration/ModelOrderPage.js"],"names":["React","Component","Grid","connect","compose","Fab","modelS","whiteModelS","redModelS","ModelOrderConfiguration","fetchModelConfiguration","ModelOrderMainPage","constructor","props","onColorSelectionChange","color","colorCode","toLowerCase","includes","setState","selectedColor","onOrderSelection","userData","history","modelConfig","push","pathname","state","onclickExplore","console","log","location","modelName","bind","componentWillReceiveProps","nextProps","timeout","ms","Promise","resolve","setTimeout","componentDidMount","getModelConfig","render","backgroundColor","zIndex","mapDispatchToProps","dispatch","model","mapStateToProps","allCarReducer","selectedModelConfig"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Grid\n} from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport compose from 'recompose/compose'\nimport Fab from '@material-ui/core/Fab'\n// import image from '../assets/modelX.png'\nimport modelS from '../../assets/modelS.png'\nimport whiteModelS from '../../assets/compositor\\ 1.png'\nimport redModelS from '../../assets/compositor\\ (1)\\ 1.png'\nimport ModelOrderConfiguration from './ModelOrderConfigurations'\nimport {fetchModelConfiguration} from '../../actions'\n\nclass ModelOrderMainPage extends Component {\n      constructor(props) {\n        super(props)\n        this.state = {\n          selectedColor: 'white',\n        }\n        this.onColorSelectionChange = this.onColorSelectionChange.bind(this);\n        this.onOrderSelection = this.onOrderSelection.bind(this);\n        this.onclickExplore = this.onclickExplore.bind(this);\n      }\n\n  componentWillReceiveProps(nextProps) {\n    \n  }\n\n  onColorSelectionChange = (color) => {\n    const colorCode = color.toLowerCase().includes('red') ? 'red' : 'white'\n    this.setState({selectedColor: colorCode});\n  }\n\n  onOrderSelection = (userData) => {\n\n    const {history, modelConfig} = this.props\n\n    // this.timeout(100000);\n    history.push({\n      pathname: '/finalOrderPage',\n      state: {modelConfig, userData}\n    });\n  }\n\n  onclickExplore = () => () => {\n    console.log('Coming heree....')\n    const {history, location} = this.props;\n    const { modelName } = location.state\n    history.push({\n      pathname: '/carDetails',\n      state: { modelName }\n    });\n}\n\n  timeout(ms) { //pass a time in milliseconds to this function\n    console.log('Coming here.....')\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  componentDidMount() {\n    const { location } = this.props\n    const { modelName } = location.state\n    const { getModelConfig } = this.props\n\n    getModelConfig(modelName)\n  }\n\n\n  render() {\n    const { location, modelConfig, history } = this.props\n    const { modelName } = location.state\n    const { selectedColor } = this.state;\n    \n    return (\n        <div>\n        {modelConfig ? \n        (<Grid container style={{backgroundColor: 'white'}}>\n                <Grid item lg={7}>\n                    <img src={selectedColor === 'white' ? whiteModelS : redModelS} alt='modelS' class='orderModelImage'/>\n                </Grid>\n                <Grid item lg={5} style={{zIndex:999}}>\n                    <ModelOrderConfiguration onclickExplore={this.onclickExplore} onOrderSelection={this.onOrderSelection} onColorChange={this.onColorSelectionChange} history={history} modelName= {modelName} modelConfig={modelConfig}/>\n                </Grid>\n            </Grid>\n        ) : null }\n        </div>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n      getModelConfig: (model) => dispatch(fetchModelConfiguration(model))\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    modelConfig: state.allCarReducer.selectedModelConfig\n  }\n}\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(ModelOrderMainPage)\n"]},"metadata":{},"sourceType":"module"}