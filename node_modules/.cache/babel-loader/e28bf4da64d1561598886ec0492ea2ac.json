{"ast":null,"code":"var _jsxFileName = \"/Users/anofrancis/Desktop/tesla-web-app/src/components/AllCarsPage.js\";\nimport React, { Component } from 'react';\nimport { withStyles, Card, CardContent, Typography, TextField, Grid, Button, Paper, CardMedia } from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport image from '../assets/compositor\\ 1.png';\nimport CarCard from './CarCard';\nimport { fetchAllCars } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LandingPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickCarCard = modelName => () => {\n      const {\n        history\n      } = this.props;\n      history.push({\n        pathname: '/carDetails',\n        state: {\n          modelName\n        }\n      });\n    };\n\n    this.onClickCarCard = this.onClickCarCard.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.receiveAllCarModels();\n  }\n\n  componentWillReceiveProps(nextProps) {}\n\n  render() {\n    const {\n      models\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allCarsPage\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 8,\n        className: \"mainGrid\",\n        direction: \"column\",\n        alignItems: \"center\",\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          cstyle: {\n            marginBottom: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            className: \"allModelText\",\n            children: \"All Models\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), models.length <= 0 ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n            style: {\n              width: 500\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            alignItems: \"center\",\n            justify: \"center\",\n            spacing: 2 // style={{ minHeight: '100vh' }}\n            ,\n            children: models.map(item => {\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                className: \"carGrid\",\n                item: true,\n                onClick: this.onClickCarCard(item.model),\n                children: /*#__PURE__*/_jsxDEV(CarCard, {\n                  title: item.displayName,\n                  modelName: item.model,\n                  data: item\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 33\n                }, this)\n              }, item.model, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 29\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/**\n * Function to call the action to call API to send login credentials for verification\n */\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    receiveAllCarModels: () => dispatch(fetchAllCars())\n  };\n}\n/**\n * Function to receive the state of login api call response\n */\n\n\nfunction mapStateToProps(state) {\n  return {\n    models: state.allCarReducer.models\n  };\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(LandingPage);","map":{"version":3,"sources":["/Users/anofrancis/Desktop/tesla-web-app/src/components/AllCarsPage.js"],"names":["React","Component","withStyles","Card","CardContent","Typography","TextField","Grid","Button","Paper","CardMedia","LinearProgress","connect","compose","image","CarCard","fetchAllCars","LandingPage","constructor","props","onClickCarCard","modelName","history","push","pathname","state","bind","componentDidMount","receiveAllCarModels","componentWillReceiveProps","nextProps","render","models","marginBottom","length","width","map","item","model","displayName","mapDispatchToProps","dispatch","mapStateToProps","allCarReducer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  withStyles,\n  Card,\n  CardContent,\n  Typography,\n  TextField,\n  Grid,\n  Button,\n  Paper,\n  CardMedia\n} from '@material-ui/core'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { connect } from 'react-redux'\nimport compose from 'recompose/compose'\nimport image from '../assets/compositor\\ 1.png'\nimport CarCard from './CarCard'\nimport {fetchAllCars} from '../actions'\n\nclass LandingPage extends Component {\n  constructor(props) {\n    super(props)\n\n    this.onClickCarCard = this.onClickCarCard.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.receiveAllCarModels()\n}\n\n  componentWillReceiveProps(nextProps) {\n \n  }\n\n  onClickCarCard = (modelName) => () => {\n        const {history} = this.props;\n        history.push({\n          pathname: '/carDetails',\n          state: { modelName }\n        });\n}\n\n  render() {\n    const { models } = this.props\n\n    return (\n      <div className=\"allCarsPage\">\n          <Grid container\n          spacing={8}\n           className=\"mainGrid\"\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\">\n              <Grid item cstyle={{marginBottom: 20}}>\n              <Typography variant=\"h5\" className=\"allModelText\">\n          All Models\n        </Typography>\n        </Grid>\n        {\n          models.length <= 0 ?\n          (\n          <Grid item>\n          <LinearProgress style={{width: 500}}/>\n          </Grid>\n          )\n          : null\n        }\n        \n        <Grid item>\n        <Grid container\n        direction=\"row\"\n        alignItems=\"center\"\n        justify=\"center\"\n        spacing={2}\n        // style={{ minHeight: '100vh' }}\n        >\n            {\n                models.map((item) => {\n                        return (\n                            <Grid className=\"carGrid\" item onClick={this.onClickCarCard(item.model)} key={item.model}>\n                                <CarCard  title={item.displayName} modelName={item.model} data={item}/>\n                            </Grid>\n                        )\n                    \n                }) \n            }\n            \n        </Grid>\n        </Grid>\n        </Grid>\n      </div>\n    )\n  }\n}\n\n/**\n * Function to call the action to call API to send login credentials for verification\n */\nfunction mapDispatchToProps(dispatch) {\n  return {\n    receiveAllCarModels: () => dispatch(fetchAllCars()),\n  }\n}\n/**\n * Function to receive the state of login api call response\n */\nfunction mapStateToProps(state) {\n  return {\n      models: state.allCarReducer.models\n  }\n}\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(LandingPage)\n"]},"metadata":{},"sourceType":"module"}