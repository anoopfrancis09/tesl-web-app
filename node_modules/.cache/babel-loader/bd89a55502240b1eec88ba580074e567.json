{"ast":null,"code":"var _jsxFileName = \"/Users/anofrancis/Desktop/tesla-web-app/src/components/OrderCompletePage/index.js\";\nimport React, { Component } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport Fab from '@material-ui/core/Fab'; // import image from '../assets/modelX.png'\n\nimport modelS from '../../assets/modelS.png';\nimport whiteModelS from '../../assets/compositor\\ 1.png';\nimport redModelS from '../../assets/compositor\\ (1)\\ 1.png';\nimport successtick from '../../assets/check-mark.png';\nimport { fetchModelConfiguration } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModelOrderMainPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onColorSelectionChange = color => {\n      const colorCode = color.toLowerCase().includes('red') ? 'red' : 'white';\n      this.setState({\n        selectedColor: colorCode\n      });\n    };\n\n    this.onOrderSelection = data => {\n      const {\n        history\n      } = this.props;\n      history.push('/finalOrderPage');\n    };\n\n    this.onColorSelectionChange = this.onColorSelectionChange.bind(this);\n    this.onOrderSelection = this.onOrderSelection.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {}\n\n  componentDidMount() {// const { location } = this.props\n    // const { modelName } = location.state\n    // const { getModelConfig } = this.props\n    // getModelConfig(modelName)\n  }\n\n  render() {\n    // const { location } = this.props\n    // const { modelName, modelConfig, data } = location.state\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          backgroundColor: 'white'\n        },\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: successtick,\n                alt: \"orderSuccessTick\",\n                class: \"tickImage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" Your Order is Complete \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this)]\n          }, 'orderSuccessContainer', true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getModelConfig: model => dispatch(fetchModelConfiguration(model))\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    modelConfig: state.allCarReducer.selectedModelConfig\n  };\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(ModelOrderMainPage);","map":{"version":3,"sources":["/Users/anofrancis/Desktop/tesla-web-app/src/components/OrderCompletePage/index.js"],"names":["React","Component","Grid","connect","compose","Fab","modelS","whiteModelS","redModelS","successtick","fetchModelConfiguration","ModelOrderMainPage","constructor","props","onColorSelectionChange","color","colorCode","toLowerCase","includes","setState","selectedColor","onOrderSelection","data","history","push","bind","componentWillReceiveProps","nextProps","componentDidMount","render","backgroundColor","mapDispatchToProps","dispatch","getModelConfig","model","mapStateToProps","state","modelConfig","allCarReducer","selectedModelConfig"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Grid\n} from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport compose from 'recompose/compose'\nimport Fab from '@material-ui/core/Fab'\n// import image from '../assets/modelX.png'\nimport modelS from '../../assets/modelS.png'\nimport whiteModelS from '../../assets/compositor\\ 1.png'\nimport redModelS from '../../assets/compositor\\ (1)\\ 1.png'\nimport successtick from '../../assets/check-mark.png'\nimport {fetchModelConfiguration} from '../../actions'\n\nclass ModelOrderMainPage extends Component {\n      constructor(props) {\n        super(props)\n\n        this.onColorSelectionChange = this.onColorSelectionChange.bind(this);\n        this.onOrderSelection = this.onOrderSelection.bind(this);\n      }\n\n  componentWillReceiveProps(nextProps) {\n    \n  }\n\n  onColorSelectionChange = (color) => {\n    const colorCode = color.toLowerCase().includes('red') ? 'red' : 'white'\n    this.setState({selectedColor: colorCode});\n  }\n\n  onOrderSelection = (data) => {\n    const {history} = this.props\n\n    history.push('/finalOrderPage')\n  }\n\n  componentDidMount() {\n    // const { location } = this.props\n    // const { modelName } = location.state\n    // const { getModelConfig } = this.props\n\n    // getModelConfig(modelName)\n  }\n\n\n  render() {\n    // const { location } = this.props\n    // const { modelName, modelConfig, data } = location.state\n    \n    return (\n        <div>\n        <Grid container style={{backgroundColor: 'white'}} alignItems='center' justifyContent='center'>\n            <Grid item>\n                <Grid key='orderSuccessContainer' container alignItems='center'>\n                    <Grid item>\n                    <img src={successtick} alt='orderSuccessTick' class='tickImage'/>\n                    </Grid>\n                    <Grid item> \n                    <span> Your Order is Complete </span>\n                    </Grid>\n                </Grid>\n                \n                </Grid>\n                <Grid item>\n                    \n                </Grid>\n                <Grid item lg={5}>\n                </Grid>\n            </Grid>\n        </div>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n      getModelConfig: (model) => dispatch(fetchModelConfiguration(model))\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    modelConfig: state.allCarReducer.selectedModelConfig\n  }\n}\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(ModelOrderMainPage)\n"]},"metadata":{},"sourceType":"module"}