{"ast":null,"code":"var _jsxFileName = \"/Users/anofrancis/Desktop/tesl-web-app/src/components/CarCard.js\";\nimport React, { Component } from 'react';\nimport { Card, CardContent, Typography, CardMedia } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose'; // import image from '../assets/modelX.png'\n\nimport modelX from '../assets/modelX.png';\nimport modelS from '../assets/modelS.png';\nimport modelY from '../assets/modelY.png';\nimport model3 from '../assets/model3.png';\nimport ModelMinDetail from './MinimalSpecView/MinimalModelSpecifications';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CarCard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderPicture = modelName => {\n      switch (modelName) {\n        case 'modelX':\n          return modelX;\n\n        case 'modelS':\n          return modelS;\n\n        case 'modelY':\n          return modelY;\n\n        case 'model3':\n          return model3;\n\n        default:\n          return modelS;\n      }\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {}\n\n  render() {\n    const {\n      title,\n      modelName,\n      data\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"eachCarCard\",\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        className: \"carImage\" // style={{ width: \"100%\", height: \"150px\" }}\n        ,\n        image: this.renderPicture(modelName),\n        className: \"eachCarImage\",\n        title: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(ModelMinDetail, {\n          modelData: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n/**\n * Function to call the action to call API to send login credentials for verification\n */\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {};\n}\n/**\n * Function to receive the state of login api call response\n */\n\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(CarCard);","map":{"version":3,"sources":["/Users/anofrancis/Desktop/tesl-web-app/src/components/CarCard.js"],"names":["React","Component","Card","CardContent","Typography","CardMedia","connect","compose","modelX","modelS","modelY","model3","ModelMinDetail","CarCard","renderPicture","modelName","componentWillReceiveProps","nextProps","render","title","data","props","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,IADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,SAJF,QAKO,mBALP;AAMA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,cAAP,MAA2B,8CAA3B;;;AAEA,MAAMC,OAAN,SAAsBZ,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAO9Ba,aAP8B,GAObC,SAAD,IAAe;AAC7B,cAAQA,SAAR;AACE,aAAK,QAAL;AACE,iBAAOP,MAAP;;AACF,aAAK,QAAL;AACE,iBAAOC,MAAP;;AACF,aAAK,QAAL;AACE,iBAAOC,MAAP;;AACF,aAAK,QAAL;AACE,iBAAOC,MAAP;;AACF;AACE,iBAAOF,MAAP;AAVJ;AAYH,KApB+B;AAAA;;AAG9BO,EAAAA,yBAAyB,CAACC,SAAD,EAAY,CAEpC;;AAkBDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASJ,MAAAA,SAAT;AAAoBK,MAAAA;AAApB,QAA6B,KAAKC,KAAxC;AACA,wBACM,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,8BACJ,QAAC,SAAD;AACA,QAAA,SAAS,EAAC,UADV,CAEA;AAFA;AAGA,QAAA,KAAK,EAAE,KAAKP,aAAL,CAAmBC,SAAnB,CAHP;AAKE,QAAA,SAAS,EAAC,cALZ;AAME,QAAA,KAAK,EAAEI;AANT;AAAA;AAAA;AAAA;AAAA,cADI,eASJ,QAAC,WAAD;AAAA,+BACE,QAAC,cAAD;AAAgB,UAAA,SAAS,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATI;AAAA;AAAA;AAAA;AAAA;AAAA,YADN;AAeD;;AAxC6B;AA2ChC;AACA;AACA;;;AACA,SAASE,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO,EAAP;AAED;AACD;AACA;AACA;;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO,EAAP;AAED;;AAED,eAAelB,OAAO,CACpBD,OAAO,CACLkB,eADK,EAELF,kBAFK,CADa,CAAP,CAKbT,OALa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Card,\n  CardContent,\n  Typography,\n  CardMedia\n} from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport compose from 'recompose/compose'\n// import image from '../assets/modelX.png'\nimport modelX from '../assets/modelX.png'\nimport modelS from '../assets/modelS.png'\nimport modelY from '../assets/modelY.png'\nimport model3 from '../assets/model3.png'\nimport ModelMinDetail from './MinimalSpecView/MinimalModelSpecifications'\n\nclass CarCard extends Component {\n\n\n  componentWillReceiveProps(nextProps) {\n    \n  }\n\n  renderPicture = (modelName) => {\n    switch (modelName) {\n      case 'modelX':\n        return modelX;\n      case 'modelS':\n        return modelS;\n      case 'modelY':\n        return modelY;\n      case 'model3':\n        return model3;\n      default:\n        return modelS;\n    }\n}\n\n\n  render() {\n    const { title, modelName, data } = this.props\n    return (\n          <Card className=\"eachCarCard\">\n      <CardMedia\n      className='carImage'\n      // style={{ width: \"100%\", height: \"150px\" }}\n      image={this.renderPicture(modelName)}\n      \n        className=\"eachCarImage\"\n        title={title}\n      />\n      <CardContent>\n        <ModelMinDetail modelData={data}/>\n      </CardContent>\n    </Card>\n    )\n  }\n}\n\n/**\n * Function to call the action to call API to send login credentials for verification\n */\nfunction mapDispatchToProps(dispatch) {\n  return {\n  }\n}\n/**\n * Function to receive the state of login api call response\n */\nfunction mapStateToProps(state) {\n  return {\n  }\n}\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(CarCard)\n"]},"metadata":{},"sourceType":"module"}