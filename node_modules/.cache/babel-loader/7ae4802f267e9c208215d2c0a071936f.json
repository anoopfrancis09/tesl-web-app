{"ast":null,"code":"var _jsxFileName = \"/Users/anofrancis/Desktop/tesla-web-app/src/components/ModelOrderPage.js\";\nimport React, { Component } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport Fab from '@material-ui/core/Fab'; // import image from '../assets/modelX.png'\n\nimport modelS from '../assets/modelS.png';\nimport whiteModelS from '../assets/compositor\\ 1.png';\nimport redModelS from '../assets/compositor\\ (1)\\ 1.png';\nimport ModelOrderConfiguration from './ModelOrderConfigurations';\nimport { fetchModelDetails } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModelOrderMainPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onOrderClick = () => {\n      const {\n        history\n      } = this.props;\n      history.push('/modelOrder');\n    };\n\n    this.onOrderClick = this.onOrderClick.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {}\n\n  componentDidMount() {\n    const {\n      location\n    } = this.props;\n    const {\n      modelName\n    } = location.state;\n    const {\n      getModelDetails\n    } = this.props; // getModelDetails(modelName)\n  }\n\n  render() {\n    const {\n      location\n    } = this.props;\n    const {\n      modelName\n    } = location.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justifyContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 7,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: whiteModelS,\n            alt: \"modelS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 5,\n          children: /*#__PURE__*/_jsxDEV(ModelOrderConfiguration, {\n            modelName: modelName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n/**\n * Function to call the action to call API to send login credentials for verification\n */\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getModelDetails: model => dispatch(fetchModelDetails(model))\n  };\n}\n/**\n * Function to receive the state of login api call response\n */\n\n\nfunction mapStateToProps(state) {\n  return {\n    modelData: state.allCarReducer.selectedModelData\n  };\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(ModelOrderMainPage);","map":{"version":3,"sources":["/Users/anofrancis/Desktop/tesla-web-app/src/components/ModelOrderPage.js"],"names":["React","Component","Grid","connect","compose","Fab","modelS","whiteModelS","redModelS","ModelOrderConfiguration","fetchModelDetails","ModelOrderMainPage","constructor","props","onOrderClick","history","push","bind","componentWillReceiveProps","nextProps","componentDidMount","location","modelName","state","getModelDetails","render","mapDispatchToProps","dispatch","model","mapStateToProps","modelData","allCarReducer","selectedModelData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,IADF,QAEO,mBAFP;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,GAAP,MAAgB,uBAAhB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,uBAAP,MAAoC,4BAApC;AACA,SAAQC,iBAAR,QAAgC,YAAhC;;;AAEA,MAAMC,kBAAN,SAAiCV,SAAjC,CAA2C;AACvCW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUrBC,YAVqB,GAUN,MAAM;AACnB,YAAM;AAACC,QAAAA;AAAD,UAAY,KAAKF,KAAvB;AAEAE,MAAAA,OAAO,CAACC,IAAR,CAAa,aAAb;AACD,KAdoB;;AAGf,SAAKF,YAAL,GAAoB,KAAKA,YAAL,CAAkBG,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAELC,EAAAA,yBAAyB,CAACC,SAAD,EAAY,CAEpC;;AAQDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKR,KAA1B;AACA,UAAM;AAAES,MAAAA;AAAF,QAAgBD,QAAQ,CAACE,KAA/B;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAsB,KAAKX,KAAjC,CAHkB,CAKlB;AACD;;AAGDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA;AAAF,QAAe,KAAKR,KAA1B;AACA,UAAM;AAAES,MAAAA;AAAF,QAAgBD,QAAQ,CAACE,KAA/B;AAEA,wBACI;AAAA,6BACA,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAC,QAA1B;AAAmC,QAAA,cAAc,EAAC,QAAlD;AAAA,gCACQ,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,iCACI;AAAK,YAAA,GAAG,EAAEhB,WAAV;AAAuB,YAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADR,eAIQ,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,iCACI,QAAC,uBAAD;AAAyB,YAAA,SAAS,EAAGe;AAArC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYD;;AA1CwC;AA6C3C;AACA;AACA;;;AACA,SAASI,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACHH,IAAAA,eAAe,EAAGI,KAAD,IAAWD,QAAQ,CAACjB,iBAAiB,CAACkB,KAAD,CAAlB;AADjC,GAAP;AAGD;AACD;AACA;AACA;;;AACA,SAASC,eAAT,CAAyBN,KAAzB,EAAgC;AAC9B,SAAO;AACLO,IAAAA,SAAS,EAAEP,KAAK,CAACQ,aAAN,CAAoBC;AAD1B,GAAP;AAGD;;AAED,eAAe5B,OAAO,CACpBD,OAAO,CACL0B,eADK,EAELH,kBAFK,CADa,CAAP,CAKbf,kBALa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {\n  Grid\n} from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport compose from 'recompose/compose'\nimport Fab from '@material-ui/core/Fab'\n// import image from '../assets/modelX.png'\nimport modelS from '../assets/modelS.png'\nimport whiteModelS from '../assets/compositor\\ 1.png'\nimport redModelS from '../assets/compositor\\ (1)\\ 1.png'\nimport ModelOrderConfiguration from './ModelOrderConfigurations'\nimport {fetchModelDetails} from '../actions'\n\nclass ModelOrderMainPage extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.onOrderClick = this.onOrderClick.bind(this);\n      }\n\n  componentWillReceiveProps(nextProps) {\n    \n  }\n\n  onOrderClick = () => {\n    const {history} = this.props\n\n    history.push('/modelOrder')\n  }\n\n  componentDidMount() {\n    const { location } = this.props\n    const { modelName } = location.state\n    const { getModelDetails } = this.props\n\n    // getModelDetails(modelName)\n  }\n\n\n  render() {\n    const { location } = this.props\n    const { modelName } = location.state\n    \n    return (\n        <div>\n        <Grid container direction='column' justifyContent='center'>\n                <Grid item lg={7}>\n                    <img src={whiteModelS} alt='modelS'/>\n                </Grid>\n                <Grid item lg={5}>\n                    <ModelOrderConfiguration modelName= {modelName}/>\n                </Grid>\n            </Grid>\n        </div>\n    )\n  }\n}\n\n/**\n * Function to call the action to call API to send login credentials for verification\n */\nfunction mapDispatchToProps(dispatch) {\n  return {\n      getModelDetails: (model) => dispatch(fetchModelDetails(model))\n  }\n}\n/**\n * Function to receive the state of login api call response\n */\nfunction mapStateToProps(state) {\n  return {\n    modelData: state.allCarReducer.selectedModelData\n  }\n}\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(ModelOrderMainPage)\n"]},"metadata":{},"sourceType":"module"}